def versions = [
        dagger: '2.27',
        cicerone: '5.1.0',
        retrofit: '2.6.0',
        okHttp: '3.11.0',
        retrofit_coroutines_adapter: '0.9.2',
        viewmodel_ktx: '2.3.0-alpha06'
]

def external = [
        dagger: "com.google.dagger:dagger:${versions.dagger}",
        dagger_kapt: "com.google.dagger:dagger-compiler:${versions.dagger}",
        okhttp: "com.squareup.okhttp3:okhttp:${versions.okHttp}",
        okhttp_logging_interceptor: "com.squareup.okhttp3:logging-interceptor:${versions.okHttp}",
        retrofit: "com.squareup.retrofit2:retrofit:${versions.retrofit}",
        retrofit_coroutines_adapter: "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:${versions.retrofit_coroutines_adapter}",
        retrofit_gson_adapter: "com.squareup.retrofit2:converter-gson:${versions.retrofit}",
        cicerone:"ru.terrakok.cicerone:cicerone:${versions.cicerone}",
        viewmodel_ktx: "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions.viewmodel_ktx}",
        kotlin_stdlib: "org.jetbrains.kotlin:kotlin-stdlib:1.3.72"
]

def test = [
        mockito: "org.mockito:mockito-core:2.0.42-beta",
        junit: 'junit:junit:4.12',
        androidx_test_junit: "androidx.test.ext:junit:1.1.1",
        espresso_core: "androidx.test.espresso:espresso-core:3.2.0"
]

def androidx = [
        appcompat: "androidx.appcompat:appcompat:1.2.0",
        core: "androidx.core:core-ktx:1.3.1"
]

ext.deps = [
        "external": external,
        "versions": versions,
        "test": test,
        "androidx": androidx
]
