// Generated by Dagger (https://dagger.dev).
package com.airatlovesmusic.multik.di.modules;

import com.airatlovesmusic.multik.data.network.ApiService;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ServerModule_ProvideApiServiceFactory implements Factory<ApiService> {
  private final ServerModule module;

  private final Provider<Retrofit> retrofitProvider;

  public ServerModule_ProvideApiServiceFactory(ServerModule module,
      Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public ApiService get() {
    return provideApiService(module, retrofitProvider.get());
  }

  public static ServerModule_ProvideApiServiceFactory create(ServerModule module,
      Provider<Retrofit> retrofitProvider) {
    return new ServerModule_ProvideApiServiceFactory(module, retrofitProvider);
  }

  public static ApiService provideApiService(ServerModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNull(instance.provideApiService(retrofit), "Cannot return null from a non-@Nullable @Provides method");
  }
}
