// Generated by Dagger (https://dagger.dev).
package com.airatlovesmusic.multik.di.modules;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import okhttp3.logging.HttpLoggingInterceptor;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ServerModule_ProvideHttpLoggingFactory implements Factory<HttpLoggingInterceptor> {
  private final ServerModule module;

  public ServerModule_ProvideHttpLoggingFactory(ServerModule module) {
    this.module = module;
  }

  @Override
  public HttpLoggingInterceptor get() {
    return provideHttpLogging(module);
  }

  public static ServerModule_ProvideHttpLoggingFactory create(ServerModule module) {
    return new ServerModule_ProvideHttpLoggingFactory(module);
  }

  public static HttpLoggingInterceptor provideHttpLogging(ServerModule instance) {
    return Preconditions.checkNotNull(instance.provideHttpLogging(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
