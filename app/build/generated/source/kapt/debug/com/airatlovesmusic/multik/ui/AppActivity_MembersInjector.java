// Generated by Dagger (https://dagger.dev).
package com.airatlovesmusic.multik.ui;

import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;
import ru.terrakok.cicerone.NavigatorHolder;
import ru.terrakok.cicerone.Router;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppActivity_MembersInjector implements MembersInjector<AppActivity> {
  private final Provider<NavigatorHolder> navigatorHolderProvider;

  private final Provider<Router> routerProvider;

  public AppActivity_MembersInjector(Provider<NavigatorHolder> navigatorHolderProvider,
      Provider<Router> routerProvider) {
    this.navigatorHolderProvider = navigatorHolderProvider;
    this.routerProvider = routerProvider;
  }

  public static MembersInjector<AppActivity> create(
      Provider<NavigatorHolder> navigatorHolderProvider, Provider<Router> routerProvider) {
    return new AppActivity_MembersInjector(navigatorHolderProvider, routerProvider);}

  @Override
  public void injectMembers(AppActivity instance) {
    injectNavigatorHolder(instance, navigatorHolderProvider.get());
    injectRouter(instance, routerProvider.get());
  }

  @InjectedFieldSignature("com.airatlovesmusic.multik.ui.AppActivity.navigatorHolder")
  public static void injectNavigatorHolder(AppActivity instance, NavigatorHolder navigatorHolder) {
    instance.navigatorHolder = navigatorHolder;
  }

  @InjectedFieldSignature("com.airatlovesmusic.multik.ui.AppActivity.router")
  public static void injectRouter(AppActivity instance, Router router) {
    instance.router = router;
  }
}
