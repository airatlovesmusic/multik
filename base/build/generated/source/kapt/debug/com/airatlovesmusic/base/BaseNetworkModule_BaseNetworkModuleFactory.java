// Generated by Dagger (https://dagger.dev).
package com.airatlovesmusic.base;

import dagger.internal.Factory;
import dagger.internal.Preconditions;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BaseNetworkModule_BaseNetworkModuleFactory implements Factory<BaseNetwork> {
  private final BaseNetworkModule module;

  public BaseNetworkModule_BaseNetworkModuleFactory(BaseNetworkModule module) {
    this.module = module;
  }

  @Override
  public BaseNetwork get() {
    return baseNetworkModule(module);
  }

  public static BaseNetworkModule_BaseNetworkModuleFactory create(BaseNetworkModule module) {
    return new BaseNetworkModule_BaseNetworkModuleFactory(module);
  }

  public static BaseNetwork baseNetworkModule(BaseNetworkModule instance) {
    return Preconditions.checkNotNull(instance.baseNetworkModule(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
